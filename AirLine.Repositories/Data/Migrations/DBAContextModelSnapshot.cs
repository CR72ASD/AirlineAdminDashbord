// <auto-generated />
using System;
using AirLine.Repositories.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AirLine.Repositories.Data.Migrations
{
    [DbContext(typeof(DBAContext))]
    partial class DBAContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AirLine.Core.Entities.AirCraft", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AircraftModel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoOfSeatClassA")
                        .HasColumnType("int");

                    b.Property<int>("NoOfSeatClassB")
                        .HasColumnType("int");

                    b.Property<int>("NoOfSeatClassC")
                        .HasColumnType("int");

                    b.HasKey("Code");

                    b.ToTable("AirCrafts");
                });

            modelBuilder.Entity("AirLine.Core.Entities.AirLines", b =>
                {
                    b.Property<int>("AirLineCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AirLineAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AirLineContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AirLineImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AirLineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AirLinePhone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AirLineCode");

                    b.ToTable("AirLines");
                });

            modelBuilder.Entity("AirLine.Core.Entities.Booking", b =>
                {
                    b.Property<int>("BookingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClassA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClassB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClassC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int>("FlightID")
                        .HasColumnType("int");

                    b.HasKey("BookingID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("FlightID");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("AirLine.Core.Entities.Country", b =>
                {
                    b.Property<int>("CountryCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryCode");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("AirLine.Core.Entities.Customer", b =>
                {
                    b.Property<int>("CustCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CustDateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustEmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustPassportNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("CustCode");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("AirLine.Core.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("AirLine.Core.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Age")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("emp_DeptID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("emp_DeptID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("AirLine.Core.Entities.Flight", b =>
                {
                    b.Property<int>("FlightNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AirCraftCode")
                        .HasColumnType("int");

                    b.Property<int>("AirLineCode")
                        .HasColumnType("int");

                    b.Property<int>("FromPort")
                        .HasColumnType("int");

                    b.Property<int>("ToPort")
                        .HasColumnType("int");

                    b.HasKey("FlightNumber");

                    b.HasIndex("AirCraftCode");

                    b.HasIndex("AirLineCode");

                    b.HasIndex("FromPort");

                    b.HasIndex("ToPort");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("AirLine.Core.Entities.FlightSchedule", b =>
                {
                    b.Property<int>("FlightAutoNumberKEY")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AvalibleSiteClassA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AvalibleSiteClassB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AvalibleSiteClassC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("FlightNumber")
                        .HasColumnType("int");

                    b.HasKey("FlightAutoNumberKEY");

                    b.HasIndex("FlightNumber");

                    b.ToTable("FlightSchedules");
                });

            modelBuilder.Entity("AirLine.Core.Entities.PortsFrom", b =>
                {
                    b.Property<int>("PortIDNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryCode")
                        .HasColumnType("int");

                    b.Property<string>("PortIDCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PortIDNumber");

                    b.HasIndex("CountryCode");

                    b.ToTable("PortsFrom");
                });

            modelBuilder.Entity("AirLine.Core.Entities.PortsTo", b =>
                {
                    b.Property<int>("PortIDNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryCode")
                        .HasColumnType("int");

                    b.Property<string>("PortIDCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PortIDNumber");

                    b.HasIndex("CountryCode");

                    b.ToTable("PortsTo");
                });

            modelBuilder.Entity("AirLine.Core.Entities.PriceCategory", b =>
                {
                    b.Property<int>("CategoryNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CategoryPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CategoryNumber");

                    b.ToTable("PriceCategories");
                });

            modelBuilder.Entity("AirLine.Core.Entities.Booking", b =>
                {
                    b.HasOne("AirLine.Core.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AirLine.Core.Entities.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("FlightID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Flight");
                });

            modelBuilder.Entity("AirLine.Core.Entities.Employee", b =>
                {
                    b.HasOne("AirLine.Core.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("emp_DeptID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("AirLine.Core.Entities.Flight", b =>
                {
                    b.HasOne("AirLine.Core.Entities.AirCraft", "AirCraft")
                        .WithMany()
                        .HasForeignKey("AirCraftCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AirLine.Core.Entities.AirLines", "AirLine")
                        .WithMany()
                        .HasForeignKey("AirLineCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AirLine.Core.Entities.PortsFrom", "PortsFrom")
                        .WithMany()
                        .HasForeignKey("FromPort")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AirLine.Core.Entities.PortsTo", "PortsTo")
                        .WithMany()
                        .HasForeignKey("ToPort")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AirCraft");

                    b.Navigation("AirLine");

                    b.Navigation("PortsFrom");

                    b.Navigation("PortsTo");
                });

            modelBuilder.Entity("AirLine.Core.Entities.FlightSchedule", b =>
                {
                    b.HasOne("AirLine.Core.Entities.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("FlightNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");
                });

            modelBuilder.Entity("AirLine.Core.Entities.PortsFrom", b =>
                {
                    b.HasOne("AirLine.Core.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("AirLine.Core.Entities.PortsTo", b =>
                {
                    b.HasOne("AirLine.Core.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });
#pragma warning restore 612, 618
        }
    }
}
